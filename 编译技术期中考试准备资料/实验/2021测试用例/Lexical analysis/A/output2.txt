CONSTTK const
INTTK int
IDENFR month_days
LBRACK [
INTCON 12
RBRACK ]
ASSIGN =
LBRACE {
INTCON 31
COMMA ,
INTCON 28
COMMA ,
INTCON 31
COMMA ,
INTCON 30
COMMA ,
INTCON 31
COMMA ,
INTCON 30
COMMA ,
INTCON 31
COMMA ,
INTCON 31
COMMA ,
INTCON 30
COMMA ,
INTCON 31
COMMA ,
INTCON 30
COMMA ,
INTCON 31
RBRACE }
SEMICN ;
INTTK int
IDENFR get_days
LPARENT (
INTTK int
IDENFR year
COMMA ,
INTTK int
IDENFR month
COMMA ,
INTTK int
IDENFR day
RPARENT )
LBRACE {
INTTK int
IDENFR flag
ASSIGN =
INTCON 0
SEMICN ;
INTTK int
IDENFR i
ASSIGN =
INTCON 0
SEMICN ;
INTTK int
IDENFR days
ASSIGN =
INTCON 0
SEMICN ;
IFTK if
LPARENT (
NOT !
LPARENT (
IDENFR year
MOD %
INTCON 4
RPARENT )
AND &&
LPARENT (
IDENFR year
MOD %
INTCON 100
RPARENT )
RPARENT )
LBRACE {
IDENFR flag
ASSIGN =
INTCON 1
SEMICN ;
RBRACE }
ELSETK else
LBRACE {
IFTK if
LPARENT (
IDENFR year
MOD %
INTCON 400
EQL ==
INTCON 0
RPARENT )
LBRACE {
IDENFR flag
ASSIGN =
INTCON 1
SEMICN ;
RBRACE }
RBRACE }
WHILETK while
LPARENT (
IDENFR i
LSS <
IDENFR month
MINU -
INTCON 1
RPARENT )
LBRACE {
IDENFR days
ASSIGN =
IDENFR days
PLUS +
IDENFR month_days
LBRACK [
IDENFR i
RBRACK ]
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
SEMICN ;
RBRACE }
IDENFR days
ASSIGN =
IDENFR days
PLUS +
IDENFR day
SEMICN ;
IFTK if
LPARENT (
IDENFR month
GRE >
INTCON 2
RPARENT )
LBRACE {
IDENFR days
ASSIGN =
IDENFR days
PLUS +
IDENFR flag
SEMICN ;
RBRACE }
RETURNTK return
IDENFR days
SEMICN ;
RBRACE }
INTTK int
MAINTK main
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR groups
SEMICN ;
INTTK int
IDENFR birth_year
SEMICN ;
INTTK int
IDENFR birth_month
SEMICN ;
INTTK int
IDENFR birth_day
SEMICN ;
INTTK int
IDENFR cur_year
SEMICN ;
INTTK int
IDENFR cur_month
SEMICN ;
INTTK int
IDENFR cur_day
SEMICN ;
INTTK int
IDENFR year
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "16061069\n"
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "input groups\n"
RPARENT )
SEMICN ;
IDENFR groups
ASSIGN =
GETINTTK getint
LPARENT (
RPARENT )
SEMICN ;
WHILETK while
LPARENT (
IDENFR groups
NEQ !=
INTCON 0
RPARENT )
LBRACE {
INTTK int
IDENFR live_days
ASSIGN =
INTCON 0
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "input your birth year,month,day,ep:1998 1 1\n"
RPARENT )
SEMICN ;
IDENFR birth_year
ASSIGN =
GETINTTK getint
LPARENT (
RPARENT )
SEMICN ;
IDENFR birth_month
ASSIGN =
GETINTTK getint
LPARENT (
RPARENT )
SEMICN ;
IDENFR birth_day
ASSIGN =
GETINTTK getint
LPARENT (
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "input current year,month,day,ep:2020 2 2\n"
RPARENT )
SEMICN ;
IDENFR cur_year
ASSIGN =
GETINTTK getint
LPARENT (
RPARENT )
SEMICN ;
IDENFR cur_month
ASSIGN =
GETINTTK getint
LPARENT (
RPARENT )
SEMICN ;
IDENFR cur_day
ASSIGN =
GETINTTK getint
LPARENT (
RPARENT )
SEMICN ;
IDENFR year
ASSIGN =
IDENFR birth_year
SEMICN ;
IFTK if
LPARENT (
IDENFR cur_year
LSS <
IDENFR birth_year
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "please input time legally\n"
RPARENT )
SEMICN ;
RBRACE }
ELSETK else
LBRACE {
WHILETK while
LPARENT (
IDENFR year
LSS <
IDENFR cur_year
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR year
MOD %
INTCON 400
EQL ==
INTCON 0
RPARENT )
LBRACE {
IDENFR live_days
ASSIGN =
IDENFR live_days
PLUS +
INTCON 366
SEMICN ;
RBRACE }
ELSETK else
LBRACE {
IFTK if
LPARENT (
NOT !
LPARENT (
IDENFR year
MOD %
INTCON 100
RPARENT )
OR ||
LPARENT (
IDENFR year
MOD %
INTCON 4
RPARENT )
RPARENT )
LBRACE {
IDENFR live_days
ASSIGN =
IDENFR live_days
PLUS +
INTCON 365
SEMICN ;
RBRACE }
ELSETK else
LBRACE {
IDENFR live_days
ASSIGN =
IDENFR live_days
PLUS +
INTCON 366
SEMICN ;
RBRACE }
RBRACE }
IDENFR year
ASSIGN =
IDENFR year
PLUS +
INTCON 1
SEMICN ;
RBRACE }
IDENFR live_days
ASSIGN =
IDENFR live_days
MINU -
IDENFR get_days
LPARENT (
IDENFR birth_year
COMMA ,
IDENFR birth_month
COMMA ,
IDENFR birth_day
RPARENT )
PLUS +
IDENFR get_days
LPARENT (
IDENFR cur_year
COMMA ,
IDENFR cur_month
COMMA ,
IDENFR cur_day
RPARENT )
SEMICN ;
IFTK if
LPARENT (
IDENFR live_days
GEQ >=
INTCON 0
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "you have lived %d days\n"
COMMA ,
IDENFR live_days
RPARENT )
SEMICN ;
RBRACE }
ELSETK else
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "please input time legally\n"
RPARENT )
SEMICN ;
RBRACE }
RBRACE }
IDENFR groups
ASSIGN =
IDENFR groups
MINU -
INTCON 1
SEMICN ;
RBRACE }
RETURNTK return
INTCON 0
SEMICN ;
RBRACE }
