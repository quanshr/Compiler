VOIDTK void
IDENFR printMyID
LPARENT (
INTTK int
IDENFR id
RPARENT )
LBRACE {
INTTK int
IDENFR i
ASSIGN =
INTCON 5
SEMICN ;
WHILETK while
LPARENT (
IDENFR i
GEQ >=
INTCON 3
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
IDENFR id
RPARENT )
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
MINU -
INTCON 1
SEMICN ;
RBRACE }
WHILETK while
LPARENT (
IDENFR i
GRE >
INTCON 0
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
IDENFR id
RPARENT )
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
MINU -
INTCON 1
SEMICN ;
RBRACE }
INTTK int
IDENFR j
ASSIGN =
INTCON 0
SEMICN ;
WHILETK while
LPARENT (
IDENFR j
LEQ <=
INTCON 3
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
IDENFR id
RPARENT )
SEMICN ;
IDENFR j
ASSIGN =
IDENFR j
PLUS +
INTCON 1
SEMICN ;
RBRACE }
WHILETK while
LPARENT (
IDENFR j
LSS <
INTCON 5
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
IDENFR id
RPARENT )
SEMICN ;
IDENFR j
ASSIGN =
IDENFR j
PLUS +
INTCON 1
SEMICN ;
RBRACE }
RETURNTK return
SEMICN ;
RBRACE }
INTTK int
IDENFR playID
LPARENT (
INTTK int
IDENFR id
RPARENT )
LBRACE {
INTTK int
IDENFR i
ASSIGN =
INTCON 0
SEMICN ;
WHILETK while
LPARENT (
IDENFR i
LSS <
IDENFR id
RPARENT )
LBRACE {
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
SEMICN ;
IFTK if
LPARENT (
IDENFR i
EQL ==
INTCON 711
RPARENT )
LBRACE {
CONTINUETK continue
SEMICN ;
RBRACE }
IFTK if
LPARENT (
IDENFR i
EQL ==
INTCON 19182622
RPARENT )
LBRACE {
BREAKTK break
SEMICN ;
RBRACE }
RBRACE }
RETURNTK return
IDENFR i
SEMICN ;
RBRACE }
INTTK int
IDENFR block
LPARENT (
RPARENT )
LBRACE {
RETURNTK return
INTCON 1
SEMICN ;
RBRACE }
INTTK int
MAINTK main
LPARENT (
RPARENT )
LBRACE {
CONSTTK const
INTTK int
IDENFR id
ASSIGN =
INTCON 19182622
SEMICN ;
IDENFR printMyID
LPARENT (
IDENFR id
RPARENT )
SEMICN ;
WHILETK while
LPARENT (
INTCON 0
RPARENT )
SEMICN ;
RETURNTK return
INTCON 0
SEMICN ;
RBRACE }
