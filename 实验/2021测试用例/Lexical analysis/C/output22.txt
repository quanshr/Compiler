CONSTTK const
INTTK int
IDENFR top
ASSIGN =
INTCON 1
SEMICN ;
CONSTTK const
INTTK int
IDENFR sum
ASSIGN =
INTCON 0
COMMA ,
IDENFR all
ASSIGN =
INTCON 0
COMMA ,
IDENFR sum_1
ASSIGN =
INTCON 23
SEMICN ;
CONSTTK const
INTTK int
IDENFR top_2
ASSIGN =
IDENFR top
COMMA ,
IDENFR top_3
ASSIGN =
IDENFR top
PLUS +
INTCON 2
SEMICN ;
INTTK int
IDENFR head
ASSIGN =
INTCON 0
SEMICN ;
INTTK int
IDENFR stack_top
COMMA ,
IDENFR stack_bottom
COMMA ,
IDENFR bottom
SEMICN ;
INTTK int
IDENFR a1
SEMICN ;
INTTK int
IDENFR a2
ASSIGN =
INTCON 2
COMMA ,
IDENFR a3
ASSIGN =
INTCON 3
COMMA ,
IDENFR a5
ASSIGN =
LPARENT (
INTCON 3
PLUS +
INTCON 2
RPARENT )
SEMICN ;
VOIDTK void
IDENFR addGloHead
LPARENT (
RPARENT )
LBRACE {
IDENFR head
ASSIGN =
IDENFR head
PLUS +
INTCON 1
SEMICN ;
RETURNTK return
SEMICN ;
RBRACE }
INTTK int
IDENFR judgeZero
LPARENT (
INTTK int
IDENFR a
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR a
EQL ==
INTCON 0
RPARENT )
LBRACE {
RETURNTK return
INTCON 1
SEMICN ;
RBRACE }
RETURNTK return
INTCON 0
SEMICN ;
RBRACE }
INTTK int
IDENFR findMax
LPARENT (
INTTK int
IDENFR a
COMMA ,
INTTK int
IDENFR b
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR a
GRE >
IDENFR b
RPARENT )
LBRACE {
RETURNTK return
IDENFR a
SEMICN ;
RBRACE }
RETURNTK return
IDENFR b
SEMICN ;
RBRACE }
VOIDTK void
IDENFR blank
LPARENT (
RPARENT )
LBRACE {
RBRACE }
VOIDTK void
IDENFR testWhile
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR i
ASSIGN =
INTCON 10
SEMICN ;
WHILETK while
LPARENT (
IDENFR i
NEQ !=
INTCON 10
RPARENT )
SEMICN ;
WHILETK while
LPARENT (
IDENFR i
GEQ >=
INTCON 5
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR i
NEQ !=
INTCON 8
RPARENT )
LBRACE {
IDENFR i
ASSIGN =
IDENFR i
MINU -
INTCON 1
SEMICN ;
CONTINUETK continue
SEMICN ;
RBRACE }
IFTK if
LPARENT (
IDENFR i
EQL ==
INTCON 8
RPARENT )
LBRACE {
BREAKTK break
SEMICN ;
RBRACE }
RBRACE }
RBRACE }
VOIDTK void
IDENFR testUnaryExp
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR tmp
COMMA ,
IDENFR blk
SEMICN ;
IDENFR tmp
ASSIGN =
IDENFR sum
SEMICN ;
IDENFR tmp
ASSIGN =
INTCON 1
SEMICN ;
IDENFR tmp
ASSIGN =
LPARENT (
IDENFR a2
MULT *
INTCON 3
RPARENT )
SEMICN ;
IDENFR blk
ASSIGN =
IDENFR tmp
PLUS +
IDENFR findMax
LPARENT (
IDENFR a2
COMMA ,
IDENFR a3
RPARENT )
SEMICN ;
IDENFR blk
ASSIGN =
IDENFR blk
MINU -
LPARENT (
INTCON 2
MULT *
INTCON 1
RPARENT )
SEMICN ;
INTTK int
IDENFR zero
SEMICN ;
IDENFR zero
ASSIGN =
PLUS +
INTCON 5
SEMICN ;
IDENFR zero
ASSIGN =
MINU -
INTCON 7
SEMICN ;
IDENFR zero
ASSIGN =
PLUS +
MINU -
PLUS +
INTCON 10
SEMICN ;
RBRACE }
VOIDTK void
IDENFR testRelExp
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR score
ASSIGN =
INTCON 40
SEMICN ;
INTTK int
IDENFR grade
SEMICN ;
IFTK if
LPARENT (
IDENFR score
LSS <
INTCON 60
RPARENT )
LBRACE {
IDENFR grade
ASSIGN =
INTCON 1
SEMICN ;
RBRACE }
IFTK if
LPARENT (
IDENFR score
LEQ <=
INTCON 40
RPARENT )
LBRACE {
IDENFR grade
ASSIGN =
INTCON 0
SEMICN ;
RBRACE }
IFTK if
LPARENT (
IDENFR score
GRE >
INTCON 60
RPARENT )
LBRACE {
IDENFR grade
ASSIGN =
INTCON 3
SEMICN ;
RBRACE }
IFTK if
LPARENT (
IDENFR score
GEQ >=
INTCON 85
RPARENT )
IDENFR grade
ASSIGN =
INTCON 5
SEMICN ;
ELSETK else
LBRACE {
IDENFR grade
ASSIGN =
INTCON 4
SEMICN ;
RBRACE }
RBRACE }
VOIDTK void
IDENFR testAddExp
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR b1
COMMA ,
IDENFR b2
SEMICN ;
IDENFR b1
ASSIGN =
INTCON 3
PLUS +
INTCON 4
SEMICN ;
IDENFR b2
ASSIGN =
INTCON 5
MINU -
INTCON 7
SEMICN ;
RBRACE }
VOIDTK void
IDENFR testLogic
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR a1
SEMICN ;
IFTK if
LPARENT (
NOT !
IDENFR judgeZero
LPARENT (
IDENFR a5
RPARENT )
RPARENT )
LBRACE {
IDENFR a1
ASSIGN =
INTCON 10
SEMICN ;
RBRACE }
RBRACE }
INTTK int
MAINTK main
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR tmp
SEMICN ;
INTTK int
IDENFR b1
ASSIGN =
INTCON 8
DIV /
INTCON 2
SEMICN ;
INTTK int
IDENFR b2
ASSIGN =
IDENFR a2
MULT *
INTCON 5
SEMICN ;
INTTK int
IDENFR b3
ASSIGN =
IDENFR b2
MOD %
INTCON 3
SEMICN ;
IDENFR tmp
ASSIGN =
GETINTTK getint
LPARENT (
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "19373034\n"
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
IDENFR tmp
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
IDENFR top
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
IDENFR head
RPARENT )
SEMICN ;
IDENFR addGloHead
LPARENT (
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
IDENFR head
RPARENT )
SEMICN ;
IDENFR tmp
ASSIGN =
IDENFR judgeZero
LPARENT (
IDENFR b1
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
IDENFR tmp
RPARENT )
SEMICN ;
IDENFR tmp
ASSIGN =
IDENFR findMax
LPARENT (
IDENFR b2
COMMA ,
IDENFR b3
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
IDENFR tmp
RPARENT )
SEMICN ;
IDENFR blank
LPARENT (
RPARENT )
SEMICN ;
IDENFR testWhile
LPARENT (
RPARENT )
SEMICN ;
IDENFR testUnaryExp
LPARENT (
RPARENT )
SEMICN ;
IDENFR testRelExp
LPARENT (
RPARENT )
SEMICN ;
IDENFR testAddExp
LPARENT (
RPARENT )
SEMICN ;
IDENFR testLogic
LPARENT (
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "8\n"
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "9\n"
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "10"
RPARENT )
SEMICN ;
RETURNTK return
INTCON 0
SEMICN ;
RBRACE }
