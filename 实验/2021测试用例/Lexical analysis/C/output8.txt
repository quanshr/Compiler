INTTK int
IDENFR aa
LPARENT (
INTTK int
IDENFR b
LBRACK [
RBRACK ]
LBRACK [
INTCON 3
RBRACK ]
RPARENT )
LBRACE {
INTTK int
IDENFR w
SEMICN ;
IDENFR w
ASSIGN =
IDENFR b
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
PLUS +
IDENFR b
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 1
RBRACK ]
PLUS +
IDENFR b
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 2
RBRACK ]
PLUS +
IDENFR b
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
PLUS +
IDENFR b
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 1
RBRACK ]
PLUS +
IDENFR b
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 2
RBRACK ]
SEMICN ;
RETURNTK return
IDENFR w
SEMICN ;
RBRACE }
INTTK int
MAINTK main
LPARENT (
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "19182650\n"
RPARENT )
SEMICN ;
CONSTTK const
INTTK int
IDENFR a
LBRACK [
INTCON 2
RBRACK ]
LBRACK [
INTCON 3
RBRACK ]
ASSIGN =
LBRACE {
LBRACE {
INTCON 1
COMMA ,
INTCON 2
COMMA ,
INTCON 3
RBRACE }
COMMA ,
LBRACE {
INTCON 4
COMMA ,
INTCON 5
COMMA ,
INTCON 6
RBRACE }
RBRACE }
SEMICN ;
INTTK int
IDENFR b
LBRACK [
INTCON 2
RBRACK ]
LBRACK [
INTCON 3
RBRACK ]
ASSIGN =
LBRACE {
LBRACE {
INTCON 1
COMMA ,
INTCON 2
COMMA ,
INTCON 3
RBRACE }
COMMA ,
LBRACE {
INTCON 4
COMMA ,
INTCON 5
COMMA ,
INTCON 6
RBRACE }
RBRACE }
SEMICN ;
INTTK int
IDENFR c
LBRACK [
INTCON 2
RBRACK ]
LBRACK [
INTCON 3
RBRACK ]
SEMICN ;
INTTK int
IDENFR d
SEMICN ;
IDENFR d
ASSIGN =
IDENFR aa
LPARENT (
IDENFR b
RPARENT )
SEMICN ;
IDENFR c
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
ASSIGN =
IDENFR b
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
SEMICN ;
IDENFR c
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 1
RBRACK ]
ASSIGN =
IDENFR b
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 1
RBRACK ]
SEMICN ;
IDENFR c
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 2
RBRACK ]
ASSIGN =
IDENFR b
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 2
RBRACK ]
SEMICN ;
IDENFR c
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
ASSIGN =
IDENFR b
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
SEMICN ;
IDENFR c
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 1
RBRACK ]
ASSIGN =
IDENFR b
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 1
RBRACK ]
SEMICN ;
IDENFR c
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 2
RBRACK ]
ASSIGN =
IDENFR b
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 2
RBRACK ]
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
IDENFR a
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
IDENFR a
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 1
RBRACK ]
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
IDENFR a
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 2
RBRACK ]
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
IDENFR a
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
IDENFR a
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 1
RBRACK ]
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
IDENFR a
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 2
RBRACK ]
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
IDENFR d
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
IDENFR c
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
IDENFR c
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 2
RBRACK ]
RPARENT )
SEMICN ;
RETURNTK return
INTCON 0
SEMICN ;
RBRACE }
