CONSTTK const
INTTK int
IDENFR max_number
ASSIGN =
INTCON 100
SEMICN ;
CONSTTK const
INTTK int
IDENFR min_number
ASSIGN =
INTCON 0
SEMICN ;
INTTK int
IDENFR a
ASSIGN =
INTCON 0
SEMICN ;
INTTK int
MAINTK main
LPARENT (
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "19231204"
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "\n"
RPARENT )
SEMICN ;
INTTK int
IDENFR score
SEMICN ;
INTTK int
IDENFR b
ASSIGN =
INTCON 30
SEMICN ;
IDENFR score
ASSIGN =
GETINTTK getint
LPARENT (
RPARENT )
SEMICN ;
IFTK if
LPARENT (
IDENFR score
GEQ >=
IDENFR min_number
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "The score is %d.\n"
COMMA ,
IDENFR score
RPARENT )
SEMICN ;
RBRACE }
IDENFR a
ASSIGN =
INTCON 4
DIV /
INTCON 2
SEMICN ;
IFTK if
LPARENT (
IDENFR a
EQL ==
INTCON 2
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "Yes!\n"
RPARENT )
SEMICN ;
RBRACE }
IDENFR a
ASSIGN =
INTCON 3
PLUS +
INTCON 5
SEMICN ;
IFTK if
LPARENT (
IDENFR a
NEQ !=
INTCON 8
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "No!\n"
RPARENT )
SEMICN ;
RBRACE }
ELSETK else
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "Yes!\n"
RPARENT )
SEMICN ;
RBRACE }
IDENFR a
ASSIGN =
INTCON 10
MULT *
INTCON 10
SEMICN ;
IFTK if
LPARENT (
IDENFR a
LEQ <=
IDENFR max_number
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "Yes!\n"
RPARENT )
SEMICN ;
RBRACE }
IFTK if
LPARENT (
IDENFR a
LSS <
IDENFR max_number
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "Yes!\n"
RPARENT )
SEMICN ;
RBRACE }
IFTK if
LPARENT (
IDENFR a
GRE >
IDENFR b
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "No!"
RPARENT )
SEMICN ;
RBRACE }
ELSETK else
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "Yes!"
RPARENT )
SEMICN ;
RBRACE }
RETURNTK return
INTCON 0
SEMICN ;
RBRACE }
